<launch>
  <arg name="node_start_delay" default="1.0" /> 
  <arg name="paused" default="false"/>
  <arg name="use_sim_time" default="true"/>
  <arg name="gui" default="true"/>
  <arg name="headless" default="false"/>
  <arg name="debug" default="false"/>
  <arg name="model" default="$(find puma_model_camera)/urdf/puma_model.urdf.xacro"/>
  <arg name="name" default="camera" />
  <arg name="topics_ns" default="camera" />
  <arg name="add_plug" default="false" />
  <arg name="publish_pointcloud" default="true"/>

  <!-- Launch Gazebo -->
  <include file="$(find gazebo_ros)/launch/empty_world.launch">
    <arg name="debug" value="$(arg debug)" />
    <arg name="gui" value="$(arg gui)" />
    <arg name="paused" value="$(arg paused)"/>
    <arg name="use_sim_time" value="$(arg use_sim_time)"/>
    <arg name="headless" value="$(arg headless)"/>
  </include>

  <!-- Spawn the robot -->
  <param name="robot_description" command="$(find xacro)/xacro $(arg model) use_nominal_extrinsics:=true publish_pointcloud:=$(arg publish_pointcloud) add_plug:=$(arg add_plug) name:=$(arg name) topics_ns:=$(arg topics_ns)" />

  <node name="spawn_urdf" pkg="gazebo_ros" type="spawn_model" args="-z 1.0 -param robot_description -urdf -model puma_model" />
  <!-- convert joint states to TF transforms for rviz, etc -->
  <node name="robot_state_publisher" pkg="robot_state_publisher" type="robot_state_publisher" />
  <node name="joint_state_publisher" pkg="joint_state_publisher" type="joint_state_publisher" />

  <!-- Load joint controller configurations from YAML file to parameter server -->
  <rosparam file="$(find puma_gazebo)/config/gazebo_params.yaml" command="load"/>

  <!-- load the controllers -->
  <node name="controller_spawner" pkg="controller_manager" type="spawner" respawn="false"
    output="screen" args=" wheel_right_controller wheel_left_controller dir_right_controller dir_left_controller"/>

  <!-- Velocity controller -->
  <node name="puma_ackermann_converter" pkg="puma_controller" type="convert_ackermann_node.py" output="screen"/>
  <node name="puma_velocity_linear_controller" pkg="puma_controller" type="velocity_linear_node.py" output="screen"/>

  <!-- Converter gps to enu -->
  <node name="puma_gps_to_enu" pkg="puma_gps_to_enu" type="gps_to_enu_node.py" output="screen"/>
  
  <!-- load node simulation -->
  <node name="puma_gazebo_fake" pkg="puma_gazebo" type="gazebo_controller_node.py" output="screen" launch-prefix="bash -c 'sleep $(arg node_start_delay); $0 $@' " />

  <node name="rviz" pkg="rviz" type="rviz" args="-d $(find puma_gazebo)/rviz/model.rviz" required="true"/>

</launch>