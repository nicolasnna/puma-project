<?xml version="1.0"?>
<launch>
  <arg name="path" value="$(find puma_navigation_simulation)/config/test_obs"/>
  
  <arg name="map_file" default="$(find puma_navigation_simulation)/maps/map_example.yaml"/>
  <node pkg="map_server" name="map_server" type="map_server" args="$(arg map_file)"/>

  <node name="move_base" pkg="move_base" type="move_base" output="screen" clear_params="true">
    <rosparam command="load" file="$(arg path)/costmap_common.yaml" ns="global_costmap"/>
    <rosparam command="load" file="$(arg path)/costmap_common.yaml" ns="local_costmap"/>
    <rosparam command="load" file="$(arg path)/global_costmap.yaml"/>
    <rosparam command="load" file="$(arg path)/local_costmap.yaml"/>

    <param name="base_global_planner" value="global_planner/GlobalPlanner" />
		<param name="planner_frequency" value="1.0" />
		<param name="planner_patience" value="5.0" />

		<!-- <param name="base_local_planner" value="teb_local_planner/TebLocalPlannerROS" /> -->
		<param name="controller_frequency" value="5.0" />
		<param name="controller_patience" value="15.0" /> 

    <rosparam command="load" file="$(arg path)/base_global_planner.yaml"/>
    <rosparam command="load" file="$(arg path)/teb_cmdvel.yaml"/>
    <param name="clearing_rotation_allowed" value="false" /> 
    <param name="base_local_planner" value="teb_local_planner/TebLocalPlannerROS" />

  </node>
  <node name="puma_ackermann_converter" pkg="puma_controller" type="convert_ackermann_node.py" output="screen"/>

  <!-- <node name="pointcloud_to_laserscan" pkg="pointcloud_to_laserscan" type="pointcloud_to_laserscan_node">
    <remap from="cloud_in" to="/camera/depth/color/points"/>
    <remap from="scan" to="/camera/scan"/>
    <rosparam>
      target_frame: camera_link
      transform_tolerance: 0.01
      min_height: 0.0
      max_heihgt: 1.0

      angle_min: -1.5708
      angle_max: 1.5708
      angle_increment: 0.0087
      scan_time: 0.3333
      range_min: 0.45
      range_max: 4.0
      use_inf: true

      concurrency_level: 1
    </rosparam>
  </node>

  <node name="amcl" pkg="amcl" type="amcl" output="screen">
    <rosparam file="$(arg path)/amcl.yaml" command="load"/>
  </node> -->

</launch>